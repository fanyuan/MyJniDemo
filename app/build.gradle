plugins {
    id 'com.android.application'//'com.android.library'//
}

android {
    compileSdkVersion 29

    defaultConfig {
        //applicationId "com.example.myjnidemo"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                // 指定一些编译选项
                cppFlags "-std=c++11 -frtti -fexceptions"
                cFlags "-DSTDC_HEADERS"
                // 也可以使用下面这种语法向变量传递参数：
                // arguments "-D变量名=参数".
                //arguments "-DANDROID_ARM_NEON=TRUE",
                        // 使用下面这种语法向变量传递多个参数（参数之间使用空格隔开）：
                        // arguments "-D变量名=参数1 参数2"
                        //"-DANDROID_CPP_FEATURES=rtti exceptions"

                // 指定ABI
                abiFilters 'armeabi-v7a' , 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'//'armeabi'
            }
        }

//        ndk{
//
//            moduleName"hello"       //生成的so文件名字，调用C程序的代码中会用到该名字
//            abiFilters 'armeabi-v7a' , 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'//'armeabi',
//        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}